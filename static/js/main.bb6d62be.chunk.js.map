{"version":3,"sources":["api/data.js","components/User/Users.js","components/Comment/Comment.js","components/CommentList/CommentList.js","components/Post/Post.js","components/PostList/PostList.js","App.js","index.js"],"names":["getData","url","fetch","then","response","json","Users","_ref","name","email","website","react_default","a","createElement","Fragment","Comments","comment","className","body","CommentList","comments","map","Comment_Comments","key","id","Post","data","title","Users_Users","user","CommentList_CommentList_CommentList","PostList","posts","post","Post_Post_Post","getPostsWithUsers","users","_objectSpread","find","item","userId","filter","postId","urlUsers","urlPosts","urlComments","App","state","originPosts","isLoading","isLoaded","hasError","_this","setState","Promise","all","_ref2","Object","slicedToArray","catch","finally","searchPost","event","toConsumableArray","toLowerCase","includes","target","value","_this$state","this","length","onClick","role","type","placeholder","onChange","PostList_PostList_PostList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.bb6d62be.chunk.js","sourcesContent":["export const getData = (url) => {\n  return fetch(url).then(response =>\n    response.json()\n  );\n};\n","import React from 'react';\nimport './Users.css';\nimport PropTypes from 'prop-types';\n\nexport const Users = ({ name, email, website }) => (\n  <>\n    <h6>{name}</h6>\n    <h6>{email}</h6>\n    <h6>{website}</h6>\n  </>\n);\n\nUsers.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport './Comment.css';\nimport PropTypes from 'prop-types';\n\nexport const Comments = ({ comment }) => (\n  <div className=\"card-body\">\n    <li className=\"card-title\">{comment.name}</li>\n    <p className=\"card-text card-email\">{comment.email}</p>\n    <p className=\"card-text\">{comment.body}</p>\n  </div>\n);\n\nComments.propTypes = {\n  comment: PropTypes.shape({\n    name: PropTypes.string,\n    body: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport './CommentList.css';\n\nimport PropTypes from 'prop-types';\nimport { Comments } from '../Comment/Comment';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"card w-75\">\n    <h4>Comments:</h4>\n    {comments.map(comment => (\n      <Comments comment={comment} key={comment.id} />))}\n  </div>\n);\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React from 'react';\nimport './Post.css';\n\nimport PropTypes from 'prop-types';\nimport { Users } from '../User/Users';\nimport { CommentList } from '../CommentList/CommentList';\n\nexport const Post = ({ data }) => (\n  <div className=\"card\">\n    <div className=\"card-header\">\n      <h4 className=\"card-title\">{data.title}</h4>\n      <Users {...data.user} />\n    </div>\n    <div className=\"card-body\">\n      <p className=\"card-text\">\n        {data.body}\n      </p>\n      <CommentList comments={data.comments} />\n    </div>\n  </div>\n);\n\nPost.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    user: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport './PostList.css';\n\nimport PropTypes from 'prop-types';\nimport { Post } from '../Post/Post';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"post-list\">\n    {posts.map(post => (\n      <Post data={post} key={post.id} />))\n    }\n  </div>\n);\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React from 'react';\nimport './App.css';\n\nimport { getData } from './api/data';\nimport { PostList } from './components/PostList/PostList';\n\nfunction getPostsWithUsers(posts, users, comments) {\n  return posts.map(post => ({\n    ...post,\n    user: users.find(item => item.id === post.userId),\n    comments: comments.filter(comment => comment.postId === post.id),\n  }));\n}\n\nconst urlUsers = 'https://jsonplaceholder.typicode.com/users';\nconst urlPosts = 'https://jsonplaceholder.typicode.com/posts';\nconst urlComments = 'https://jsonplaceholder.typicode.com/comments';\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    originPosts: [],\n    users: [],\n    comments: [],\n    isLoading: false,\n    isLoaded: false,\n    hasError: false,\n  };\n\n  getData = () => {\n    this.setState({\n      posts: [],\n      isLoading: true,\n      hasError: false,\n    });\n\n    Promise.all([getData(urlPosts), getData(urlUsers), getData(urlComments)])\n      .then(([posts, users, comments]) => {\n        this.setState({\n          originPosts: getPostsWithUsers(posts, users, comments),\n          posts: getPostsWithUsers(posts, users, comments),\n          isLoaded: true,\n          users,\n          comments,\n        });\n      })\n      .catch(() => {\n        this.setState({\n          hasError: true,\n        });\n      })\n      .finally(() => {\n        this.setState({\n          isLoading: false,\n        });\n      });\n  };\n\n  searchPost = (event) => {\n    const { originPosts } = this.state;\n\n    this.setState({\n      posts: [...originPosts].filter(\n        post => post.title.toLowerCase().includes(event.target.value.toLowerCase())\n          || post.body.toLowerCase().includes(event.target.value.toLowerCase())\n      ),\n    });\n  };\n\n  render() {\n    const {\n      posts,\n      users,\n      comments,\n      isLoading,\n      hasError,\n      isLoaded,\n    } = this.state;\n\n    return (\n      <div className=\"main\">\n        <h1>Dynamic list of posts</h1>\n        <p>\n          <span>posts: </span>\n          {posts.length}\n        </p>\n        {!posts.length\n          && !users.length\n          && !comments.length\n          && !isLoading\n          && !hasError && (\n          <button onClick={this.getData} className=\"btn btn-outline-dark\">\n              Load posts\n          </button>\n        )}\n        {isLoading && (\n          <div className=\"spinner-grow text-dark\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        )}\n        {hasError && (\n          <>\n            <h3>Something went wrong:(</h3>\n            <button\n              type=\"button\"\n              onClick={this.getData}\n              className=\"btn btn-outline-dark\"\n            >\n              Try again\n            </button>\n          </>\n        )}\n        {isLoaded && (\n          <>\n            <input\n              type=\"text\"\n              name=\"text-area\"\n              placeholder=\"Search your post ❤\"\n              className=\"form-control form-control-lg\"\n              onChange={this.searchPost}\n            />\n            <PostList posts={posts} />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}